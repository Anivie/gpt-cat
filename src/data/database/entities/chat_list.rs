//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "chat_list")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub account_id: Option<i32>,
    pub user_id: Option<i32>,
    pub message_key: String,
    pub ai_output: String,
    pub user_input: String,
    pub timestamp: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::account_list::Entity",
        from = "Column::AccountId",
        to = "super::account_list::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    AccountList,
    #[sea_orm(
        belongs_to = "super::user::Entity",
        from = "Column::UserId",
        to = "super::user::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    User,
}

impl Related<super::account_list::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AccountList.def()
    }
}

impl Related<super::user::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::User.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
