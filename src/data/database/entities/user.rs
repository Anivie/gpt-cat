//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub api_key: String,
    pub is_active: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::chat_list::Entity")]
    ChatList,
    #[sea_orm(has_many = "super::private_command::Entity")]
    PrivateCommand,
    #[sea_orm(has_many = "super::usage_list::Entity")]
    UsageList,
    #[sea_orm(has_many = "super::user_usage::Entity")]
    UserUsage,
}

impl Related<super::chat_list::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ChatList.def()
    }
}

impl Related<super::private_command::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PrivateCommand.def()
    }
}

impl Related<super::usage_list::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UsageList.def()
    }
}

impl Related<super::user_usage::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserUsage.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
